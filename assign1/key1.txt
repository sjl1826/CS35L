Exercise 1.
1. e m a c s SP e x e r 1 . h t m l Enter
2. C-s H T M L Enter
3. C-s s c a v e n g e r Enter M-b
4. C-s s e l f - r e f e r e n t i a l Enter M-b
5. C-s a r r o w Enter M-b
6. C-e
7. C-a
8. Yes, I can use the C-s command to search for the word as well as use the M-b keyword to move back as well as C-e and C-a to move to the end or the beginning of a line.
9. No, I did not move the cursor using the arrow keys.
10. C-x C-c

d i f f SP - u SP e x e r 1 . h t m l SP e x e r 2 . h t m l SP > e x e r 2 . d i f f Enter

Exercise 1.2
1. e m a c s SP e x e r 2 . h t m l Enter
2. C-u 18 M-g M-g C-k
3. C-s D E M-b C-a C-k
4. C-s < ! Enter C-a M-k M-k
5. C-s < ! Enter C-d C-d C-d C-d C-d C-d C-d
   C-s < ! Enter C-a C-k C-k C-k C-k C-k C-k C-k
   C-s < ! Enter C-a C-k

Exercise 1.3
1. e m a c s SP e x e r 3 . h t m l Enter
2. C-s 1 . C-b C-b C-d 4 2 C-s 1 . C-b C-b C-d 4 2
3. C-r U C-f C-d C-d C-d C-d S - A S C I I
4. C-M-s [ ^ [ : a s c i i : ] ] Enter C-a M-k M-k M-k M-k
5. C-s < / o Enter C-f C-f Enter
6. C-x C-c y

Exercise 1.4
1. c a t SP e x e r 2 . h t m l SP e x e r 2 . d i f f SP > e x e r 4 . h t m l Enter
2. e m a c s SP e x e r 4 . h t m l Enter
3. M-> C-r < C-SP C-n C-b C-b M-w
    C-r < / b o d y > SP < C-n C-n Enter UP C-y
    C-s < ! Enter C-b C-b C-n C-n C-n C-n C-b C-b M-w
    C-r < p > I Enter C-p C-p C-y
    C-s < ! - - SP D Enter C-a C-f C-SP C-n C-b C-b M-w
    C-r K e Enter C-p C-p C-p C-y
    C-s < ! - - SP Y C-a C-f C-SP C-n C-n C-n C-b C-b M-w
    C-r 2 > SP < Enter C-n C-n C-y
    C-s < ! - - - Enter C-b C-b C-b C-b C-b C-SP C-e C-b C-b C-b C-b C-b M-w
    C-p C-r o u t p u t Enter C-e C-b C-b C-b C-b C-b C-y
    C-s - - < Enter C-p C-p C-a C-f C-SP C-n C-n C-n C-f C-f C-f M-w
    C-r p > SP < h r Enter C-n C-y
5. C-s < ! Enter C-n C-SP M-> DEL
6. C-x u
7. Enter  - - >
   C-p C-p DEL
   C-r < ! Enter C-f DEL C-r < ! Enter C-d C-r < ! Enter C-d C-r < ! Enter C-d C-r < ! Enter C-d C-r < ! Enter C-d
   C-r < ! Enter C-n < ! - - 
   C-s - > Enter DEL C-s - > Enter DEL C-s - > Enter DEL C-s - > Enter DEL C-s - > Enter DEL C-s - > Enter DEL C-s - > Enter DEL
8. M-< M-x r e p l a c e - s t r i n g Enter < o l > Enter < o L > Enter
There were 7 instances of <ol>.
9. d i f f SP - u SP e x e r 1 . h t m l SP e x e r 4 . h t m l SP > e x e r 4 . d i f f Enter

Exercise 1.5
1. m k d i r SP j u n k Enter
2. c d SP j u n k Enter
   e m a c s SP h e l l o . c Enter
   I then copied and pasted the code provided.
3. M-x c o m p i l e Enter DEL DEL DEL DEL DEL DEL DEL DEL
   g c c SP h e l l o . c SP - o SP h e l l o Enter
4. C-x SP h e l l o - o u t Enter
   C-u M-! . / h e l l o Enter
5. C-SP M-> M-w
   C-x C-f DEL DEL DEL DEL DEL k e y 1 . t x t Enter
   M-> M-g
#include <stdio.h>
int
main (void)
{
  char n = '\n', b = '\\', q = '"';
  char const *p = "#include <stdio.h>%cint%cmain (void)%c{%c  char n = '%cn', b = '%c%c', q = '%c';%c  char const *p = %c%s%c;%c  printf (p, n, n, n, n, b, b, b, q, n, q, p, q, n, n, n, n);%c  return 0;%c}%c";
  printf (p, n, n, n, n, b, b, b, q, n, q, p, q, n, n, n, n);
  return 0;
}

Exercise 1.6
1.  C-x b Enter
2. ( r a n d o m SP " 5 0 4 - 9 6 9 - 3 8 1 " ) C-j
The result was 720603844529020824.
3. ( s e t q SP x SP ( r a n d o m ) ) C-j ( s e t q SP y SP ( r a n d o m ) ) C-j
4. ( * SP x SP y ) C-j
The result of this product was -933562559106740584. It should be a positive number because two positive numbers were multiplied, not negative.
5. M-; ( * SP x SP y )
The output contains octadecimal and hexadecimal values as well.
6. The two random integers are not truly random because the documents on random explain that it is pseudo random meaning that there is a pattern involved and it is therefore not truly random.
7. In order for the answer to be wrong, the product must overflow. For overflow, the product of x and y must be out of the range of [-2^n-1, 2^n-1-1]. So, x*y < -2^n-1 OR x*y > 2^n-1 -1. So, the probability for a true random case that the answer will be incorrect will be -2^n-1/x < y < (2^(n-1)-1)/x all divided by the possible number of integers.
